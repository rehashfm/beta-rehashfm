{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/gatsby-theme-wordpress-mdx/src/templates/mdxPost.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","MdxPostTemplate","content","tags","title","date","author","featuredImage","site","excerpt","timeToRead","wordCount","slug","context","useThemeUI","colorScale","colorRange","getCurrentColors","primary","secondary","animateIn","sx","mb","siteMetadata","description","keywords","siteURL","image","childImageSharp","fluid","src","replace","isBlogPostPage","div","display","alignItems","width","overflow","alt","style","height","fontSize","fontFamily","color","h1","formatDate","flexWrap","p","mt","mr","map","tag","index","textAlign","aria-label","onClick","window","history","back","iconPath","MdxPost","data","post","mdxWpPosts","mdxData","config","body","frontmatter","featureImage","words","fields","pageQuery"],"mappings":"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","file":"component---node-modules-gatsby-theme-wordpress-mdx-src-templates-mdx-post-js-4bc4442c8449ae3f3a3e.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/** @jsx jsx */\nimport * as React from 'react'\nimport { jsx, Styled, useThemeUI } from 'theme-ui'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Tag } from '../components/Tag'\nimport { Seo } from '../components/Seo'\nimport ScrollAnimation from 'react-animate-on-scroll'\nimport { formatDate, colorRange, getCurrentColors } from '../helpers'\nimport { Content } from '../components/Content'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { ButtonIcon } from '../components/ButtonIcon'\n\nexport const MdxPostTemplate = ({\n  content,\n  tags,\n  title,\n  date,\n  author,\n  featuredImage,\n  site,\n  excerpt,\n  timeToRead,\n  wordCount,\n  slug\n}) => {\n  const context = useThemeUI()\n  const colorScale = colorRange(\n    getCurrentColors(context).primary,\n    getCurrentColors(context).secondary,\n    tags ? tags.length : 2\n  )\n\n  return (\n    <>\n      <ScrollAnimation animateIn=\"fadeIn\">\n        <article\n          sx={{\n            mb: 7\n          }}\n        >\n          <Seo\n            title={`${site.siteMetadata.title} | ${title}`}\n            description={excerpt}\n            keywords={tags || []}\n            siteURL={`${site.siteMetadata.siteURL}${slug}`}\n            image={\n              featuredImage\n                ? featuredImage.childImageSharp.fluid.src.replace('/', '')\n                : ''\n            }\n            isBlogPostPage\n          />\n          {featuredImage && (\n            <Styled.div\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                width: '100%',\n                overflow: 'hidden',\n                mb: 4\n              }}\n            >\n              <Img\n                fluid={featuredImage.childImageSharp.fluid}\n                alt={title}\n                style={{\n                  display: 'block',\n                  width: '100%',\n                  height: '100%'\n                }}\n              />\n            </Styled.div>\n          )}\n          <Styled.div\n            sx={{\n              fontSize: 2,\n              fontFamily: 'body',\n              color: 'secondary',\n              mb: 3\n            }}\n          >\n            <Styled.h1>{title}</Styled.h1>\n            {formatDate(date)} {author && <> | By {author} </>}\n          </Styled.div>\n          {tags && (\n            <ul\n              sx={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                p: 0,\n                mt: 4,\n                mb: 3,\n                '> :nth-of-type(n)': {\n                  mr: 2\n                }\n              }}\n            >\n              {tags.map((tag, index) => (\n                <Tag key={index} color={colorScale[index]}>\n                  {tag}\n                </Tag>\n              ))}\n            </ul>\n          )}\n\n          <Styled.div\n            sx={{\n              mb: 4,\n              color: 'textMuted',\n              fontSize: 1,\n              fontFamily: 'body',\n              textAlign: 'right'\n            }}\n          >\n            {`${timeToRead} min read / ${wordCount} words`}\n          </Styled.div>\n\n          <MDXRenderer>{content}</MDXRenderer>\n        </article>\n        <span>\n          <ButtonIcon\n            aria-label={'back'}\n            onClick={() => window.history.back()}\n            iconPath=\"M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z\"\n          />\n        </span>\n      </ScrollAnimation>\n    </>\n  )\n}\n\nconst MdxPost = ({ data }) => {\n  const {\n    mdxWpPosts: { mdxData: post },\n    site\n  } = data\n  return (\n    <Content config={site.config}>\n      <MdxPostTemplate\n        content={post.body}\n        excerpt={post.excerpt}\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n        date={data.mdxWpPosts.date}\n        author={post.author}\n        featuredImage={post.frontmatter.featureImage}\n        site={site}\n        timeToRead={post.timeToRead}\n        wordCount={post.wordCount.words}\n        slug={post.fields.slug}\n      />\n    </Content>\n  )\n}\n\nexport default MdxPost\n\nexport const pageQuery = graphql`\n  query MdxBlogPostByID($id: String!) {\n    site {\n      siteMetadata {\n        title\n        siteURL\n      }\n    }\n    mdxWpPosts(id: { eq: $id }) {\n      date\n      mdxData {\n        timeToRead\n        wordCount {\n          words\n        }\n        body\n        excerpt\n        author\n        frontmatter {\n          tags\n          title\n          featureImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}