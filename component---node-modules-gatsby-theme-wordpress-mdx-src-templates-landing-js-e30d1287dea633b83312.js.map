{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-theme-wordpress-mdx/src/templates/Landing.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","contentQuery","Landing","data","body","mdx","images","allImageSharp","nodes","imagesFluid","reduce","obj","item","fluid","originalName","context","useThemeUI","useColorMode","colorMode","setColorMode","allMdxWpPosts","useAllMdxWpPosts","allMdxWpPages","useAllMdxWpPages","div","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qBCRf,IAAIG,EAAU,EAAQ,QAClBC,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAQ,EAAQ,QAChBC,EAAO,EAAQ,QACfC,GAAc,EAAQ,QAAaC,SAAW,IAAIC,UAIlDC,EAAiBL,GAAM,WACzB,SAASM,KACT,QAASJ,GAAW,cAA6B,GAAII,aAAcA,MAEjEC,GAAYP,GAAM,WACpBE,GAAW,kBAGbP,EAAQA,EAAQa,EAAIb,EAAQW,GAAKD,GAAkBE,GAAW,UAAW,CACvEH,UAAW,SAAmBK,EAAQC,GACpCb,EAAUY,GACVX,EAASY,GACT,IAAIC,EAAYC,UAAUC,OAAS,EAAIJ,EAASZ,EAAUe,UAAU,IACpE,GAAIL,IAAaF,EAAgB,OAAOH,EAAWO,EAAQC,EAAMC,GACjE,GAAIF,GAAUE,EAAW,CAEvB,OAAQD,EAAKG,QACX,KAAK,EAAG,OAAO,IAAIJ,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAOC,EAAK,IAC/B,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,IACxC,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjD,KAAK,EAAG,OAAO,IAAID,EAAOC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAG5D,IAAII,EAAQ,CAAC,MAEb,OADAA,EAAMC,KAAKC,MAAMF,EAAOJ,GACjB,IAAKT,EAAKe,MAAMP,EAAQK,IAGjC,IAAIG,EAAQN,EAAUO,UAClBC,EAAWvB,EAAOG,EAASkB,GAASA,EAAQG,OAAOF,WACnDG,EAASC,SAASN,MAAMO,KAAKd,EAAQU,EAAUT,GACnD,OAAOX,EAASsB,GAAUA,EAASF,M,kCC5CvC,4FA4CaK,EAAY,YAgBVC,UAhDC,SAAC,GAKV,IAAD,IAJJC,KACSC,EAGL,EAHFC,IAAOD,KACiBE,EAEtB,EAFFC,cAAiBC,MAGfC,EAAc,GACdH,GAAUA,EAAOhB,SACnBmB,EAAmCH,EAb/BI,QACJ,SAACC,EAAKC,GAAN,OAAiBD,EAAIC,EAAKC,MAAMC,cAAgBF,EAAKC,MAAQF,IAC7D,KAcF,IAAMI,EAAUC,cANZ,EAO8BC,cAA3BC,EAPH,KAOcC,EAPd,KAQEC,EAAgBC,cAChBC,EAAgBC,cAEtB,OACE,YAAC,IAAOC,IAAR,KACE,YAAC,cAAD,CACEf,YAAaA,EACbM,QAASA,EACTG,UAAWA,EACXC,aAAcA,EACdC,cAAeA,EACfE,cAAeA,GAEdlB,M,gyDCtCT,IAAMqB,EAAQvD,EAAd,Q,EACkCA,EAAQ,QAAlCwD,E,EAAAA,iBAAkBrB,E,EAAAA,IAClBsB,EAAgBzD,EAAQ,QAAxByD,YAERxD,UAAiB,SAAqB,GAKlC,IAJFyD,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbpB,OAJF,GAQM+B,EAAOvC,YAAb,GACMwC,EAASD,EAAA,KAAS,SAAAE,GAAG,OAAIH,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---node-modules-gatsby-theme-wordpress-mdx-src-templates-landing-js-e30d1287dea633b83312.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","/** @jsx jsx */\nimport { jsx, Styled, useThemeUI, useColorMode } from 'theme-ui'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { useAllMdxWpPosts, useAllMdxWpPages } from '../Hooks'\n\nconst convertArrayToObject = array =>\n  array.reduce(\n    (obj, item) => ((obj[item.fluid.originalName] = item.fluid), obj),\n    {}\n  )\n\nconst Landing = ({\n  data: {\n    mdx: { body },\n    allImageSharp: { nodes: images }\n  }\n}) => {\n  let imagesFluid = {}\n  if (images && images.length) {\n    imagesFluid = convertArrayToObject(images)\n  }\n  // helpers for mdx props\n  const context = useThemeUI()\n  const [colorMode, setColorMode] = useColorMode()\n  const allMdxWpPosts = useAllMdxWpPosts()\n  const allMdxWpPages = useAllMdxWpPages()\n\n  return (\n    <Styled.div>\n      <MDXRenderer\n        imagesFluid={imagesFluid}\n        context={context}\n        colorMode={colorMode}\n        setColorMode={setColorMode}\n        allMdxWpPosts={allMdxWpPosts}\n        allMdxWpPages={allMdxWpPages}\n      >\n        {body}\n      </MDXRenderer>\n    </Styled.div>\n  )\n}\n\nexport const contentQuery = graphql`\n  query landingQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n    }\n    allImageSharp {\n      nodes {\n        fluid(maxWidth: 800) {\n          originalName\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nexport default Landing\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}